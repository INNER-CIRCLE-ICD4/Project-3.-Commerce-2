name: Commerce-2 CI/CD Pipeline

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

# AWS 설정 정보
env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: public.ecr.aws/f5h1p0v2

# CI/CD 파이프라인 (테스트, 빌드, Docker 빌드, ECR 푸시)
jobs:
  ci-cd:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Run tests
      run: |
        chmod +x ./gradlew
        ./gradlew :service:stock:test

    - name: Build application
      run: |
        ./gradlew :service:stock:build -x test

    - name: Build Docker image
      run: |
        docker build -f Dockerfile.stock -t $ECR_REPOSITORY:latest .

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR Public
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registry-type: public

    - name: Push to ECR Public
      run: |
        docker push $ECR_REPOSITORY:latest 
