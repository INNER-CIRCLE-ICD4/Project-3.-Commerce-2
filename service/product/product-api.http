### Product API Test Collection
### Base URL 설정
@baseUrl = http://localhost:8080
@contentType = application/json

### 1. 상품 생성 (Product Create)
POST {{baseUrl}}/api/v1/product
Content-Type: {{contentType}}

{
  "sellerId": "SELLER_FASHION_001",
  "categoryId": "CATEGORY_CLOTHING_001",
  "name": "코튼 티셔츠",
  "brand": "베이직웨어",
  "description": "100% 면 소재의 편안한 착용감을 제공하는 베이직 티셔츠입니다.",
  "priceAmount": 29000,
  "priceCurrency": "KRW",
  "variants": [
    {
      "optionCombination": "{\"color\":\"white\",\"size\":\"S\"}",
      "price": 29000,
      "currency": "KRW",
      "stockQuantity": 100
    },
    {
      "optionCombination": "{\"color\":\"white\",\"size\":\"M\"}",
      "price": 29000,
      "currency": "KRW",
      "stockQuantity": 150
    },
    {
      "optionCombination": "{\"color\":\"white\",\"size\":\"L\"}",
      "price": 29000,
      "currency": "KRW",
      "stockQuantity": 120
    },
    {
      "optionCombination": "{\"color\":\"black\",\"size\":\"S\"}",
      "price": 29000,
      "currency": "KRW",
      "stockQuantity": 80
    },
    {
      "optionCombination": "{\"color\":\"black\",\"size\":\"M\"}",
      "price": 29000,
      "currency": "KRW",
      "stockQuantity": 200
    },
    {
      "optionCombination": "{\"color\":\"black\",\"size\":\"L\"}",
      "price": 29000,
      "currency": "KRW",
      "stockQuantity": 180
    }
  ]
}

> {%
    // 응답에서 productId 추출
    client.global.set("productId", response.body.id);
%}

### 2. 상품 단건 조회 (Product Get by ID)
GET {{baseUrl}}/api/v1/product/{{productId}}
Accept: {{contentType}}

### 3. 상품 변형 목록 조회 (Product Variants List)
GET {{baseUrl}}/api/v1/product/{{productId}}/variant
Accept: {{contentType}}

> {%
    client.global.set("firstVariantSku", response.body[0].sku ? response.body[0].sku : "");
%}

### 4. 특정 상품의 특정 변형 조회 (Product Variant by Product ID and SKU)
GET {{baseUrl}}/api/v1/product/{{productId}}/{{firstVariantSku}}
Accept: {{contentType}}

### 5. SKU로 변형 직접 조회 (Product Variant by SKU only)
GET {{baseUrl}}/api/v1/product/variant/{{firstVariantSku}}
Accept: {{contentType}}

### === 추가 테스트 케이스 ===

### 6. 간단한 상품 생성 (변형 없음)
POST {{baseUrl}}/api/v1/product
Content-Type: {{contentType}}

{
  "sellerId": "SELLER_SIMPLE_001",
  "categoryId": "CATEGORY_BOOK_001",
  "name": "자바 프로그래밍 입문서",
  "brand": "개발출판사",
  "description": "초보자를 위한 자바 프로그래밍 완벽 가이드",
  "priceAmount": 35000,
  "priceCurrency": "KRW",
  "variants": []
}

> {%
    client.global.set("simpleProductId", response.body.id);
%}

### 7. 간단한 상품 조회
GET {{baseUrl}}/api/v1/product/{{simpleProductId}}
Accept: {{contentType}}

### 8. 존재하지 않는 상품 조회 (에러 테스트)
GET {{baseUrl}}/api/v1/product/non-existent-id
Accept: {{contentType}}

### 9. 존재하지 않는 SKU 조회 (에러 테스트)
GET {{baseUrl}}/api/v1/product/variant/non-existent-sku
Accept: {{contentType}}

### === 고급 테스트 케이스 ===

### 10. 다양한 옵션 조합을 가진 상품
POST {{baseUrl}}/api/v1/product
Content-Type: {{contentType}}

{
  "sellerId": "SELLER_ELECTRONICS_001",
  "categoryId": "CATEGORY_PHONE_001",
  "name": "스마트폰 Pro Max",
  "brand": "테크브랜드",
  "description": "최신 기술이 집약된 프리미엄 스마트폰",
  "priceAmount": 1200000,
  "priceCurrency": "KRW",
  "variants": [
    {
      "optionCombination": "{\"storage\":\"128GB\",\"color\":\"스페이스그레이\"}",
      "price": 1200000,
      "currency": "KRW",
      "stockQuantity": 50
    },
    {
      "optionCombination": "{\"storage\":\"256GB\",\"color\":\"스페이스그레이\"}",
      "price": 1350000,
      "currency": "KRW",
      "stockQuantity": 30
    },
    {
      "optionCombination": "{\"storage\":\"512GB\",\"color\":\"골드\"}",
      "price": 1500000,
      "currency": "KRW",
      "stockQuantity": 20
    }
  ]
}

> {%
    client.global.set("phoneProductId", response.body.id);
    client.global.set("phoneVariantSku", response.body.variants ? response.body.variants[0].sku : "");
%}

### 11. 스마트폰 상품 조회
GET {{baseUrl}}/api/v1/product/{{phoneProductId}}
Accept: {{contentType}}

### 12. 스마트폰 변형 목록 조회
GET {{baseUrl}}/api/v1/product/{{phoneProductId}}/variant
Accept: {{contentType}}