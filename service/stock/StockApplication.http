### Stock Application API 테스트

# 서버 기본 정보
@baseUrl = http://localhost:8080
@contentType = application/json

### 1. 재고 등록 - 성공 케이스
POST {{baseUrl}}/api/stocks
Content-Type: {{contentType}}

{
  "productId": "PRODUCT-001",
  "quantity": 100
}

### 2. 재고 등록 - 다른 상품 예제
POST {{baseUrl}}/api/stocks
Content-Type: {{contentType}}

{
  "productId": "PRODUCT-002", 
  "quantity": 50
}

### 3. 재고 등록 - 유효성 검증 실패 (수량 0)
POST {{baseUrl}}/api/stocks
Content-Type: {{contentType}}

{
  "productId": "PRODUCT-003",
  "quantity": 0
}

### 4. 재고 등록 - 유효성 검증 실패 (상품 ID 누락)
POST {{baseUrl}}/api/stocks
Content-Type: {{contentType}}

{
  "quantity": 100
}

### 5. 재고 등록 - 유효성 검증 실패 (음수 수량)
POST {{baseUrl}}/api/stocks
Content-Type: {{contentType}}

{
  "productId": "PRODUCT-004",
  "quantity": -10
}

### 6. 재고 조회 (전체 정보) - 현재 미완성
# 먼저 위에서 등록한 재고의 ID를 복사해서 사용하세요
GET {{baseUrl}}/api/stock/{stockId}
Content-Type: {{contentType}}
{
  "stockId": "f36e8ed2-4ba2-40d0-9785-a416b4c0fcd4"
}

### 예제 - 특정 재고 ID로 조회
GET {{baseUrl}}/api/stocks/f36e8ed2-4ba2-40d0-9785-a416b4c0fcd4

### 7. 재고 수량 조회 - 성공
# 먼저 위에서 등록한 재고의 ID를 복사해서 사용하세요
GET {{baseUrl}}/api/stocks/f36e8ed2-4ba2-40d0-9785-a416b4c0fcd4/quantity

### 예제 - 특정 재고 ID로 수량 조회
GET {{baseUrl}}/api/stocks/12345678-1234-1234-1234-123456789012/quantity

### 8. 재고 수량 조회 - 존재하지 않는 재고
GET {{baseUrl}}/api/stocks/non-existent-stock-id/quantity

### 9. 재고 증가 - 성공
# 먼저 위에서 등록한 재고의 ID를 복사해서 사용하세요
PATCH {{baseUrl}}/api/stocks/{stockId}/increase
Content-Type: {{contentType}}

{
  "quantity": 30
}

### 예제 - 특정 재고 ID로 증가
PATCH {{baseUrl}}/api/stocks/f36e8ed2-4ba2-40d0-9785-a416b4c0fcd4/increase
Content-Type: {{contentType}}

{
  "quantity": 25
}

### 10. 재고 증가 - 유효성 검증 실패 (수량 0)
PATCH {{baseUrl}}/api/stocks/f36e8ed2-4ba2-40d0-9785-a416b4c0fcd4/increase
Content-Type: {{contentType}}

{
  "quantity": 0
}

### 11. 재고 증가 - 유효성 검증 실패 (음수)
PATCH {{baseUrl}}/api/stocks/f36e8ed2-4ba2-40d0-9785-a416b4c0fcd4/increase
Content-Type: {{contentType}}

{
  "quantity": -5
}

### 12. 재고 감소 - 성공
# 먼저 위에서 등록한 재고의 ID를 복사해서 사용하세요
PATCH {{baseUrl}}/api/stocks/{stockId}/decrease
Content-Type: {{contentType}}

{
  "quantity": 20
}

### 예제 - 특정 재고 ID로 감소
PATCH {{baseUrl}}/api/stocks/f36e8ed2-4ba2-40d0-9785-a416b4c0fcd4/decrease
Content-Type: {{contentType}}

{
  "quantity": 15
}

### 13. 재고 감소 - 재고 부족 오류 (현재 재고보다 많이 감소)
PATCH {{baseUrl}}/api/stocks/f36e8ed2-4ba2-40d0-9785-a416b4c0fcd4/decrease
Content-Type: {{contentType}}

{
  "quantity": 1000
}

### 14. 재고 감소 - 유효성 검증 실패 (수량 0)
PATCH {{baseUrl}}/api/stocks/12345678-1234-1234-1234-123456789012/decrease
Content-Type: {{contentType}}

{
  "quantity": 0
}

### 15. 재고 감소 - 존재하지 않는 재고
PATCH {{baseUrl}}/api/stocks/non-existent-stock-id/decrease
Content-Type: {{contentType}}

{
  "quantity": 10
}

###############################################
### 시나리오 테스트 (순서대로 실행하세요)
###############################################

### 시나리오 1: 재고 등록 → 조회 → 증가 → 조회 → 감소 → 조회

# STEP 1: 새로운 재고 등록
POST {{baseUrl}}/api/stocks
Content-Type: {{contentType}}

{
  "productId": "SCENARIO-PRODUCT-001",
  "quantity": 100
}

# STEP 2: 등록된 재고 수량 확인 (위에서 받은 stockId 사용)
GET {{baseUrl}}/api/stocks/{여기에-stockId-입력}/quantity

# STEP 3: 재고 30개 증가
PATCH {{baseUrl}}/api/stocks/{여기에-stockId-입력}/increase
Content-Type: {{contentType}}

{
  "quantity": 30
}

# STEP 4: 증가 후 재고 수량 확인 (130개가 되어야 함)
GET {{baseUrl}}/api/stocks/{여기에-stockId-입력}/quantity

# STEP 5: 재고 50개 감소
PATCH {{baseUrl}}/api/stocks/{여기에-stockId-입력}/decrease
Content-Type: {{contentType}}

{
  "quantity": 50
}

# STEP 6: 감소 후 최종 재고 수량 확인 (80개가 되어야 함)
GET {{baseUrl}}/api/stocks/{여기에-stockId-입력}/quantity

###############################################
### 사용 방법
###############################################

# 1. 먼저 Stock 애플리케이션을 실행하세요:
#    cd service/stock && ./gradlew bootRun

# 2. 위의 HTTP 요청들을 순서대로 또는 개별적으로 실행하세요

# 3. 재고 등록 후 받은 response에서 stockId를 복사해서 
#    다른 요청의 {stockId} 부분에 붙여넣으세요

# 4. 예상되는 Response 형태:
#    {
#      "success": true,
#      "message": "성공 메시지",
#      "data": { ... }
#    }

# 5. 오류 Response 형태:
#    {
#      "success": false, 
#      "message": "오류 메시지"
#    } 