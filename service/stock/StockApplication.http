### Stock Application API 테스트

# 서버 기본 정보
@baseUrl = http://localhost:8080
@contentType = application/json

### 1. 재고 등록 - 성공 케이스
POST {{baseUrl}}/api/stocks
Content-Type: {{contentType}}

{
  "productId": "PRODUCT-001",
  "quantity": 100
}

### 2. 재고 등록 - 다른 상품 예제
POST {{baseUrl}}/api/stocks
Content-Type: {{contentType}}

{
  "productId": "PRODUCT-002", 
  "quantity": 50
}

### 3. 재고 등록 - 유효성 검증 실패 (수량 0)
POST {{baseUrl}}/api/stocks
Content-Type: {{contentType}}

{
  "productId": "PRODUCT-003",
  "quantity": 0
}

### 4. 재고 등록 - 유효성 검증 실패 (상품 ID 누락)
POST {{baseUrl}}/api/stocks
Content-Type: {{contentType}}

{
  "quantity": 100
}

### 5. 재고 등록 - 유효성 검증 실패 (음수 수량)
POST {{baseUrl}}/api/stocks
Content-Type: {{contentType}}

{
  "productId": "PRODUCT-004",
  "quantity": -10
}


### 예제 - 특정 재고 ID로 조회
GET {{baseUrl}}/api/stocks/f36e8ed2-4ba2-40d0-9785-a416b4c0fcd4

### 7. 재고 수량 조회 - 성공
# 먼저 위에서 등록한 재고의 ID를 복사해서 사용하세요
GET {{baseUrl}}/api/stocks/f36e8ed2-4ba2-40d0-9785-a416b4c0fcd4/quantity

### 예제 - 특정 재고 ID로 수량 조회
GET {{baseUrl}}/api/stocks/12345678-1234-1234-1234-123456789012/quantity

### 8. 재고 수량 조회 - 존재하지 않는 재고
GET {{baseUrl}}/api/stocks/non-existent-stock-id/quantity

### 9. 재고 증가 - 성공
# 먼저 위에서 등록한 재고의 ID를 복사해서 사용하세요
PATCH {{baseUrl}}/api/stocks/{stockId}/increase
Content-Type: {{contentType}}

{
  "quantity": 30
}

### 예제 - 특정 재고 ID로 증가
PATCH {{baseUrl}}/api/stocks/f36e8ed2-4ba2-40d0-9785-a416b4c0fcd4/increase
Content-Type: {{contentType}}

{
  "quantity": 25
}

### 10. 재고 증가 - 유효성 검증 실패 (수량 0)
PATCH {{baseUrl}}/api/stocks/f36e8ed2-4ba2-40d0-9785-a416b4c0fcd4/increase
Content-Type: {{contentType}}

{
  "quantity": 0
}

### 11. 재고 증가 - 유효성 검증 실패 (음수)
PATCH {{baseUrl}}/api/stocks/f36e8ed2-4ba2-40d0-9785-a416b4c0fcd4/increase
Content-Type: {{contentType}}

{
  "quantity": -5
}

### 12. 재고 감소 - 성공
# 먼저 위에서 등록한 재고의 ID를 복사해서 사용하세요
PATCH {{baseUrl}}/api/stocks/{stockId}/decrease
Content-Type: {{contentType}}

{
  "quantity": 20
}

### 예제 - 특정 재고 ID로 감소
PATCH {{baseUrl}}/api/stocks/f36e8ed2-4ba2-40d0-9785-a416b4c0fcd4/decrease
Content-Type: {{contentType}}

{
  "quantity": 15
}

### 13. 재고 감소 - 재고 부족 오류 (현재 재고보다 많이 감소)
PATCH {{baseUrl}}/api/stocks/f36e8ed2-4ba2-40d0-9785-a416b4c0fcd4/decrease
Content-Type: {{contentType}}

{
  "quantity": 1000
}

### 14. 재고 감소 - 유효성 검증 실패 (수량 0)
PATCH {{baseUrl}}/api/stocks/12345678-1234-1234-1234-123456789012/decrease
Content-Type: {{contentType}}

{
  "quantity": 0
}

### 15. 재고 감소 - 존재하지 않는 재고
PATCH {{baseUrl}}/api/stocks/non-existent-stock-id/decrease
Content-Type: {{contentType}}

{
  "quantity": 10
}

###############################################
### V1 API 테스트 (동시성 안전 버전)
###############################################

### V1-1. 재고 증가 V1 - 성공
PATCH {{baseUrl}}/api/stocks/v1/f36e8ed2-4ba2-40d0-9785-a416b4c0fcd4/increase
Content-Type: {{contentType}}

{
  "quantity": 50
}

### 예제 - 특정 재고 ID로 증가
PATCH {{baseUrl}}/api/stocks/f36e8ed2-4ba2-40d0-9785-a416b4c0fcd4/increase
Content-Type: {{contentType}}

{
  "quantity": 25
}

### V1-2. 재고 증가 V1 - 존재하지 않는 재고 ID
PATCH {{baseUrl}}/api/stocks/v1/0d4665dc-c934-410b-8548-308684d2ddbf/increase
Content-Type: {{contentType}}

{
  "quantity": 50
}

### V1-3. 재고 증가 V1 - 음수 수량
PATCH {{baseUrl}}/api/stocks/v1/{stockId}/increase
Content-Type: {{contentType}}

{
  "quantity": -10
}

### V1-4. 재고 증가 V1 - 0 수량
PATCH {{baseUrl}}/api/stocks/v1/{stockId}/increase
Content-Type: {{contentType}}

{
  "quantity": 0
}

### V1-5. 재고 증가 V1 - null 수량
PATCH {{baseUrl}}/api/stocks/v1/{stockId}/increase
Content-Type: {{contentType}}

{
  "quantity": null
}

### V1-6. 재고 감소 V1 - 성공
PATCH {{baseUrl}}/api/stocks/f36e8ed2-4ba2-40d0-9785-a416b4c0fcd4/decrease2
Content-Type: {{contentType}}

{
  "quantity": 10
}

### 예제 - 특정 재고 ID로 감소
PATCH {{baseUrl}}/api/stocks/v1/f36e8ed2-4ba2-40d0-9785-a416b4c0fcd4/decrease
Content-Type: {{contentType}}

{
  "quantity": 1
}

### V1-7. 재고 감소 V1 - 존재하지 않는 재고 ID
PATCH {{baseUrl}}/api/stocks/v1/non-existent-stock-id/v1/decrease
Content-Type: {{contentType}}

{
  "quantity": 30
}

### V1-8. 재고 감소 V1 - 재고 수량 부족
PATCH {{baseUrl}}/api/stocks/v1/{stockId}/v1/decrease
Content-Type: {{contentType}}

{
  "quantity": 1000
}

### V1-9. 재고 감소 V1 - 음수 수량
PATCH {{baseUrl}}/api/stocks/v1/{stockId}/v1/decrease
Content-Type: {{contentType}}

{
  "quantity": -10
}

### V1-10. 재고 감소 V1 - 0 수량
PATCH {{baseUrl}}/api/stocks/v1/{stockId}/v1/decrease
Content-Type: {{contentType}}

{
  "quantity": 0
}

### V1-11. 재고 감소 V1 - null 수량
PATCH {{baseUrl}}/api/stocks/v1/{stockId}/v1/decrease
Content-Type: {{contentType}}

{
  "quantity": null
}

### V1-12. 재고 감소 V1 - 정확히 남은 수량만큼 감소
PATCH {{baseUrl}}/api/stocks/v1/{stockId}/v1/decrease
Content-Type: {{contentType}}

{
  "quantity": 50
}


###############################################
### V1 API vs 기존 API 비교 테스트
###############################################

### 비교 테스트 1: 같은 재고에 대해 기존 API와 V1 API 동시 사용

# 기존 API로 증가
PATCH {{baseUrl}}/api/stocks/{stockId}/increase
Content-Type: {{contentType}}

{
  "quantity": 20
}

# V1 API로 증가
PATCH {{baseUrl}}/api/stocks/v1/{stockId}/increase
Content-Type: {{contentType}}

{
  "quantity": 20
}

# 기존 API로 감소
PATCH {{baseUrl}}/api/stocks/{stockId}/decrease
Content-Type: {{contentType}}

{
  "quantity": 10
}

# V1 API로 감소
PATCH {{baseUrl}}/api/stocks/v1/{stockId}/v1/decrease
Content-Type: {{contentType}}

{
  "quantity": 10
}

###############################################
### V1 API 사용법
###############################################

# V1 API 특징:
# 1. 동시성 안전: 데이터베이스 레벨에서 원자적 연산
# 2. 반환값: Integer (영향받은 행 수)
# 3. 에러 처리: 상세한 에러 메시지 제공
# 4. URL 패턴: /v1/{stockId}/increase, /v1/{stockId}/v1/decrease

# V1 API vs 기존 API 차이점:
# - 기존 API: 도메인 로직을 통한 검증 후 업데이트
# - V1 API: 데이터베이스 레벨에서 직접 업데이트 (더 빠름, 동시성 안전)

# 사용 권장사항:
# - 높은 동시성이 필요한 경우: V1 API 사용
# - 복잡한 비즈니스 로직이 필요한 경우: 기존 API 사용